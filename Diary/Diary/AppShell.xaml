<?xml version="1.0" encoding="UTF-8" ?>
<Shell
    x:Class="Diary.AppShell"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:views="clr-namespace:Diary.Views">
    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Dark={StaticResource AppPrimaryColorDark}, Light={StaticResource AppPrimaryColor}}" />
                <Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Dark={StaticResource TextColorDark}, Light={StaticResource TextColor}}" />
                <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Dark={StaticResource TextColorDark}, Light={StaticResource TextColor}}" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="White" />
                <Setter Property="Shell.TabBarForegroundColor" Value="Black" />
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarTitleColor" Value="Black" />
            </Style>
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="TabBar" />
            <Style BasedOn="{StaticResource BaseStyle}" TargetType="FlyoutItem" />

            <!--
                Default Styles for all Flyout Items
                https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->

            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="Black" />
            </Style>
            <Style
                ApplyToDerivedTypes="True"
                Class="FlyoutItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="BackgroundColor" Value="white" />
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="white" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Amoled}" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="LightGray" />
                                    <!--  Selected Button Colour On Navigation  -->
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
                Custom Style you can apply to any Flyout Item
            -->
            <Style
                ApplyToDerivedTypes="True"
                Class="MenuItemLayoutStyle"
                TargetType="Layout">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{StaticResource Amoled}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!--
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->

    <FlyoutItem Title="Home" Icon="icon_about.xml">
        <ShellContent ContentTemplate="{DataTemplate views:AboutPage}" Route="AboutPage" />
    </FlyoutItem>
    <FlyoutItem Title="Notes" Icon="files.png">
        <ShellContent ContentTemplate="{DataTemplate views:NotePage}" Route="ItemsPage" />
    </FlyoutItem>
    <FlyoutItem Title="Calendar" Icon="calendar_checkmark_line.png">
        <ShellContent ContentTemplate="{DataTemplate views:Calendar}" Route="Calendar" />
    </FlyoutItem>
    <FlyoutItem Title="Carousel" Icon="notification_alert.png">
        <ShellContent ContentTemplate="{DataTemplate views:Carousel}" Route="Carousel" />
    </FlyoutItem>
    <FlyoutItem Title="Profile" Icon="user_profile.png">
        <!--<ShellContent ContentTemplate="{DataTemplate local:Profile}" Route="Profile" />-->
    </FlyoutItem>
    <FlyoutItem Title="Settings" Icon="setting.png">
        <ShellContent ContentTemplate="{DataTemplate views:Settings}" Route="Settings" />
    </FlyoutItem>

    <!--  When the Flyout is visible this will be a menu item you can tie a click behavior to  -->
    <MenuItem
        Clicked="OnMenuItemClicked"
        Icon="logout_line.png"
        StyleClass="MenuItemLayoutStyle"
        Text="Logout" />

    <!--
        TabBar lets you define content that won't show up in a flyout menu. When this content is active
        the flyout menu won't be available. This is useful for creating areas of the application where
        you don't want users to be able to navigate away from. If you would like to navigate to this
        content you can do so by calling
        await Shell.Current.GoToAsync("//LoginPage");
    -->
    <TabBar>
        <ShellContent ContentTemplate="{DataTemplate views:Register}" Route="Register" />
    </TabBar>

    <Shell.FlyoutHeaderTemplate>
        <DataTemplate>
            <Grid BackgroundColor="Black" HeightRequest="250">
                <Image Aspect="AspectFit" Source="GOLD_VARIANT.jpg" />
            </Grid>
        </DataTemplate>
    </Shell.FlyoutHeaderTemplate>
</Shell>